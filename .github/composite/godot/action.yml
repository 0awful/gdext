name: godot
description: "Run Godot integration tests"

inputs:
  artifact_name:
    required: true
    description: "Name of the compiled Godot artifact to download"

  github_pat:
    required: true
    description: "GitHub PAT (personal access token) to download artifacts from other repos"

  rust_toolchain:
    required: false
    default: 'stable'
    description: "Rust toolchain specifier (e.g. 'nightly')"

  rust_extra_args:
    required: false
    default: ''
    description: "Extra command line arguments for 'cargo build', e.g. features"


runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2

#    - name: "Check cache for installed Godot version"
#      id: "cache-godot"
#      uses: actions/cache@v2
#      with:
#        path: ${{ runner.temp }}/godot_bin
#        #key: godot-${{ runner.os }}-v${{ inputs.godot_ver }}
#        key: ${{ inputs.artifact_name }}

    - name: "Download Godot artifact"
#      if: steps.cache-godot.outputs.cache-hit != 'true'
      # https://github.com/dawidd6/action-download-artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        # Downloads and unzips the artifact with {name} of the latest run of specified {workflow}
        path: ${{ runner.temp }}/godot_bin
        github_token: ${{ inputs.github_pat }}
        repo: Bromeon/godot4-nightly
        branch: master
        workflow: compile-godot.yml
        workflow_conclusion: success
        name: ${{ inputs.artifact_name }}
        # Search for the last workflow run, which stored an artifact named as in `name` input
        search_artifacts: true

    - name: "Store variable to Godot binary"
      run: |
        echo "GODOT_BIN=${{ runner.temp }}/godot_bin/godot.linuxbsd.tools.64" >> $GITHUB_ENV
      shell: bash

    - name: "Inspect Godot version"
      run: |
        chmod +x $GODOT_BIN
        godotVer=$($GODOT_BIN --version || true)
        gitSha=$(echo $godotVer | sed -E "s/.+custom_build\.//")
        echo "### Godot Integration tests " >> $GITHUB_STEP_SUMMARY
        echo "Built from [\`$godotVer\`](https://github.com/godotengine/godot/commit/$gitSha)." >> $GITHUB_STEP_SUMMARY
      shell: bash

    - name: "Install Rust"
      uses: ./.github/composite/rust
      with:
        rust: ${{ inputs.rust_toolchain }}

    - name: "Build godot-rust"
      run: |
        cargo build -p itest ${{ inputs.rust_extra_args }}
      shell: bash

    - name: "Run Godot integration tests"
      run: |
        cd itest/godot
        $GODOT_BIN --headless
      shell: bash
